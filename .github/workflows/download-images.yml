name: Download and Process Images

on:
  workflow_dispatch:
    inputs:
      json_file:
        description: 'JSON file with listings data (filtering will be done in workflow)'
        required: true
        default: 'data/all_listings_for_github.json'
      batch_size:
        description: 'Batch size for processing'
        required: false
        default: '5'
      max_retries:
        description: 'Maximum retry attempts'
        required: false
        default: '3'
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  download-images:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout main repository
      uses: actions/checkout@v4
      
    - name: Setup cian-tracker repository (fresh clone)
      run: |
        # Delete any existing cian-tracker directory
        rm -rf cian-tracker
        
        # Clone fresh repository with full checkout
        git clone https://x-access-token:${{ secrets.CIAN_TRACKER_TOKEN }}@github.com/klimmm/cian-tracker.git cian-tracker
        cd cian-tracker
        
        # Configure git
        git config user.email "action@github.com"
        git config user.name "GitHub Action"
      
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests pillow tqdm
        
    - name: Create directories
      run: |
        mkdir -p cian-tracker/images
        mkdir -p data
        
    - name: Download images (with smart checkout)
      env:
        JSON_FILE: ${{ github.event.inputs.json_file || 'data/all_listings_for_github.json' }}
        BATCH_SIZE: ${{ github.event.inputs.batch_size || '5' }}
        MAX_RETRIES: ${{ github.event.inputs.max_retries || '3' }}
        IMAGE_DIR: './cian-tracker/images'
      run: |
        python scripts/download_images_smart_checkout.py \
          --json-file "$JSON_FILE" \
          --image-dir "$IMAGE_DIR" \
          --batch-size "$BATCH_SIZE" \
          --max-retries "$MAX_RETRIES" \
          --workers 2 \
          --no-predict

    - name: Commit downloaded images
      run: |
        cd cian-tracker
        
        # Debug: check if images actually exist
        echo "🔍 Current directory: $(pwd)"
        echo "🔍 Contents of images/:"
        ls -la images/ | head -10
        echo "🔍 Looking for 318598750:"
        ls -la images/ | grep 318598750 || echo "318598750 NOT FOUND"
        if [ -d "images/318598750" ]; then
          echo "🔍 318598750 exists, contents:"
          ls -la images/318598750/
        fi
        
        # Debug git status before adding
        echo "🔍 Git status before add:"
        git status --porcelain
        
        # Count total files in filesystem
        TOTAL_FILES=$(find images/ -name "*.jpg" -o -name "*.jpeg" -o -name "*.png" | wc -l)
        echo "🔍 Total image files in filesystem: $TOTAL_FILES"
        
        # Check what files are untracked (new)
        echo "🔍 Untracked files:"
        git ls-files --others --exclude-standard images/ | head -10
        
        # Force add all files including untracked ones
        git add -A images/
        git add images/ --force
        
        # Debug git status after adding  
        echo "🔍 Git status after add:"
        git status --porcelain
        echo "🔍 Staged files:"
        git diff --cached --name-only | head -20
        
        # Check for 318598750 specifically
        echo "🔍 318598750 files staged:"
        git diff --cached --name-only | grep "318598750" || echo "None found"
        
        # Alternative check: count staged image files directly
        STAGED_FILES=$(git diff --cached --name-only | grep -E '\.(jpg|jpeg|png)$' | wc -l)
        echo "🔍 Staged image files: $STAGED_FILES"
        
        # Force commit if any new files exist (even if git diff shows nothing)
        NEW_FILES_COUNT=$(find images/ -name "*.jpg" -newer images/. 2>/dev/null | wc -l)
        echo "🔍 Recently created files: $NEW_FILES_COUNT"
        
        # Check if there are changes to commit
        if [ "$STAGED_FILES" -eq 0 ] && [ "$NEW_FILES_COUNT" -eq 0 ]; then
          echo "No new images to commit"
        else
          # Use the staged files count we already calculated
          NEW_IMAGES=$STAGED_FILES
          echo "Committing $NEW_IMAGES new images"
          
          # Show what's being committed
          echo "📋 Files to be committed:"
          git diff --cached --name-only | head -20
          
          # Create commit message with timestamp
          TIMESTAMP=$(date -u +"%Y-%m-%d %H:%M:%S UTC")
          git commit -m "Auto-update images: $NEW_IMAGES new images ($TIMESTAMP)" \
                     -m "Generated by GitHub Actions workflow" \
                     -m "Repository: klimmm/cian-parse-page" \
                     -m "Workflow: Download and Process Images"
          
          # Pull latest changes and rebase our commit
          echo "🔄 Pulling latest changes and rebasing..."
          git pull --rebase origin main
          
          # Push changes with retry logic
          echo "⬆️ Pushing changes..."
          for i in {1..3}; do
            if git push origin main; then
              echo "✅ Successfully pushed $NEW_IMAGES images to cian-tracker repository"
              break
            else
              echo "⚠️ Push attempt $i failed, retrying..."
              if [ $i -lt 3 ]; then
                git pull --rebase origin main
                sleep 5
              else
                echo "❌ Failed to push after 3 attempts"
                exit 1
              fi
            fi
          done
        fi
        
    - name: Upload filtered listings debug file
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: filtered-listings-debug
        path: data/filtered_listings_debug.json
        retention-days: 7
        
    - name: Create download summary
      run: |
        echo "## Image Download Summary" >> $GITHUB_STEP_SUMMARY
        echo "- Total directories: $(find cian-tracker/images -type d | wc -l)" >> $GITHUB_STEP_SUMMARY
        echo "- Total images: $(find cian-tracker/images -name "*.jpg" -o -name "*.jpeg" -o -name "*.png" | wc -l)" >> $GITHUB_STEP_SUMMARY
        echo "- Storage used: $(du -sh cian-tracker/images | cut -f1)" >> $GITHUB_STEP_SUMMARY
        echo "- Repository: [klimmm/cian-tracker](https://github.com/klimmm/cian-tracker)" >> $GITHUB_STEP_SUMMARY
        
        # Add filtering info if debug file exists
        if [ -f "data/filtered_listings_debug.json" ]; then
          FILTERED_COUNT=$(jq length data/filtered_listings_debug.json)
          echo "- Filtered listings processed: $FILTERED_COUNT" >> $GITHUB_STEP_SUMMARY
        fi